
@online{noauthor_aws_sdn,
	title = {An Introduction to AWS Networking — Virtual Private Cloud},
	url = {https://odsc.medium.com/an-introduction-to-aws-networking-virtual-private-cloud-1639a91c67c1},
	urldate = {2022-07-01},
	langid = {italian},
	file = {Snapshot:/Users/patrickdifazio/Zotero/storage/XJ3CPPAF/dpdk-data-plane-development-kit-for-linux-vms-now-generally-available.html:text/html},
}

@online{noauthor_lenovo_sdn,
	title = {Introducing the Data Plane Development Kit (DPDK) on Lenovo Servers},
	url = {https://lenovopress.lenovo.com/lp0749-introducing-data-plane-development-kit-dpdk},
	urldate = {2022-07-01},
	langid = {italian},
	file = {Snapshot:/Users/patrickdifazio/Zotero/storage/XJ3CPPAF/dpdk-data-plane-development-kit-for-linux-vms-now-generally-available.html:text/html},
}

@online{noauthor_azure_sdn,
	title = {Software Defined Networking (SDN) in Azure Stack HCI e Windows Server},
	url = {https://docs.microsoft.com/it-it/azure-stack/hci/concepts/software-defined-networking},
	urldate = {2022-07-01},
	langid = {italian},
	file = {Snapshot:/Users/patrickdifazio/Zotero/storage/XJ3CPPAF/dpdk-data-plane-development-kit-for-linux-vms-now-generally-available.html:text/html},
}

@online{noauthor_p4ovs,
	title = {P4-OVS},
	url = {https://www.dpdk.org/wp-content/uploads/sites/35/2016/10/Day02-Session12-CianFerriter-Userspace2016.pdf},
	urldate = {2022-07-01},
	file = {Software Defined Networking:/Users/patrickdifazio/Zotero/storage/WP3WSJTU/software-defined-networking.html:text/html},
}

@online{noauthor_ubpf,
	title = {uBPF},
	url = {https://github.com/iovisor/ubpf},
	urldate = {2022-07-01},
	file = {Software Defined Networking:/Users/patrickdifazio/Zotero/storage/WP3WSJTU/software-defined-networking.html:text/html},
}

@online{noauthor_openflow,
	title = {What Is OpenFlow?},
	url = {https://www.sdxcentral.com/networking/sdn/definitions/what-the-definition-of-software-defined-networking-sdn/what-is-openflow/},
	urldate = {2022-07-01},
	file = {Software Defined Networking:/Users/patrickdifazio/Zotero/storage/WP3WSJTU/software-defined-networking.html:text/html},
}

@online{noauthor_bwmng,
	title = {vgropp/bwm-ng},
	url = {https://github.com/vgropp/bwm-ng},
	urldate = {2022-07-01},
	file = {Software Defined Networking:/Users/patrickdifazio/Zotero/storage/WP3WSJTU/software-defined-networking.html:text/html},
}

@online{noauthor_iommu,
	title = {IOMMU (Input-Output Memory Management Unit)},
	url = {https://www.peerspot.com/articles/iommu-input-output-memory-management-unit},
	urldate = {2022-07-01},
	file = {Software Defined Networking:/Users/patrickdifazio/Zotero/storage/WP3WSJTU/software-defined-networking.html:text/html},
}

@online{noauthor_pci_passthrough,
	title = {PCI passthrough via OVMF},
	url = {https://wiki.archlinux.org/title/PCI_passthrough_via_OVMF},
	urldate = {2022-07-01},
	file = {Software Defined Networking:/Users/patrickdifazio/Zotero/storage/WP3WSJTU/software-defined-networking.html:text/html},
}


@online{noauthor_software_nodate,
	title = {Software Defined Networking},
	url = {https://www.paessler.com/software-defined-networking},
	urldate = {2022-07-01},
	file = {Software Defined Networking:/Users/patrickdifazio/Zotero/storage/WP3WSJTU/software-defined-networking.html:text/html},
}

@online{accton_intel_nodate,
	title = {Intel® {DPDK} Performance on the {SAU}5081I Server},
	url = {https://www.accton.com/Technology-Brief/intel-dpdk-performance-on-the-sau5081i-server/},
	abstract = {Intel® {DPDK} Performance on the {SAU}5081I Server    
{DPDK}-Enabled Servers to Remove Bottlenecks 
This Technology Brief examines the main building blocks of Intel’s Data Plane Development Kit ({DPDK}) and how it significantly boosts data plane throughput on the Accton {SAU}5081I Cloud Server},
	author = {{Accton Technology}},
	urldate = {2022-07-01},
	langid = {american},
	file = {Snapshot:/Users/patrickdifazio/Zotero/storage/9FEFKNXD/intel-dpdk-performance-on-the-sau5081i-server.html:text/html},
}

@online{enberg_kernel-bypass_2018,
	title = {On Kernel-Bypass Networking and Programmable Packet Processing},
	url = {https://medium.com/@penberg/on-kernel-bypass-networking-and-programmable-packet-processing-799609b06898},
	abstract = {The network stack architecture is under a revolution because the network is becoming faster than the {CPU}.},
	titleaddon = {Medium},
	author = {Enberg, Pekka},
	urldate = {2022-07-01},
	date = {2018-12-13},
	langid = {english},
}

@online{noauthor_kernel-networking-vs-kernel-bypassingppm_nodate,
	title = {Kernel Bypassing},
	url = {https://www.researchgate.net/publication/339048803/figure/fig6/AS:855212877164546@1580910047429/Kernel-networking-vs-Kernel-bypassing.ppm},
	urldate = {2022-07-01},
	file = {Kernel-networking-vs-Kernel-bypassing.ppm (immagine PNG, 758 × 470 pixel):/Users/patrickdifazio/Zotero/storage/IH3M8KRC/Kernel-networking-vs-Kernel-bypassing.html:text/html},
}

@online{noauthor_veth,
	title = {Introduction to Linux interfaces for virtual networking },
	url = {https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking},
	urldate = {2022-07-01},
}

@online{noauthor_p4_nodate,
	title = {P4 – Language Consortium},
	url = {https://p4.org/},
	urldate = {2022-07-01},
}

@online{noauthor_notitle_nodate,
    title = {P4: Types and Parsers},
	url = {https://cornell-pl.github.io/cs6114/lecture05.html},
	urldate = {2022-07-01},
	file = {cornell-pl.github.io/cs6114/lecture05.html:/Users/patrickdifazio/Zotero/storage/N9F4PU8K/lecture05.html:text/html},
}

@software{noauthor_p4_2022,
	title = {P4 programming language specifications},
	rights = {Apache-2.0},
	url = {https://github.com/p4lang/p4-spec/blob/61b5860f07a90b810709843a0e5f5b7f81709eb1/p4-16/psa/psa.p4},
	publisher = {p4language},
	urldate = {2022-07-01},
	date = {2022-06-27},
	note = {original-date: 2015-08-14T08:45:53Z},
}

@software{noauthor_behavioral_2022,
	title = {{Behavioural} {Model} (BMv2)},
	rights = {Apache-2.0},
	url = {https://github.com/p4lang/behavioral-model/blob/f16d0de3486aa7fb2e1fe554aac7d237cc1adc33/docs/performance.md},
	abstract = {The reference P4 software switch},
	publisher = {p4language},
	urldate = {2022-07-01},
	date = {2022-07-01},
	note = {original-date: 2015-01-26T21:43:23Z},
}

@online{noauthor_p4elte_nodate,
	title = {P4@{ELTE} - T4P4S - a retargetable compiler for P4},
	url = {http://p4.elte.hu/},
	urldate = {2022-07-01},
	file = {P4@ELTE - T4P4S - a retargetable compiler for P4:/Users/patrickdifazio/Zotero/storage/YN2F5546/p4.elte.hu.html:text/html},
}

@online{noauthor_what_nodate,
	title = {What is the Vector Packet Processor ({VPP}) — The Vector Packet Processor v22.06-0-g0d352a97c documentation},
	url = {https://s3-docs.fd.io/vpp/22.06/},
	urldate = {2022-07-01},
	file = {What is the Vector Packet Processor (VPP) — The Vector Packet Processor v22.06-0-g0d352a97c documentation:/Users/patrickdifazio/Zotero/storage/V62GMDPR/22.06.html:text/html},
}

@online{noauthor_packet_nodate,
	title = {The Packet Processing Graph — The Vector Packet Processor v22.06-0-g0d352a97c documentation},
	url = {https://s3-docs.fd.io/vpp/22.06/aboutvpp/extensible.html#},
	urldate = {2022-07-01},
	file = {The Packet Processing Graph — The Vector Packet Processor v22.06-0-g0d352a97c documentation:/Users/patrickdifazio/Zotero/storage/683Y3EZ2/extensible.html:text/html},
}

@online{noauthor_fdio_nodate,
	title = {{FD}.io {VPP}: Shared Memory Packet Interface (memif) Library},
	url = {https://docs.fd.io/vpp/17.10/libmemif_doc.html},
	urldate = {2022-07-01},
	file = {FD.io VPP\: Shared Memory Packet Interface (memif) Library:/Users/patrickdifazio/Zotero/storage/JVMCBP35/libmemif_doc.html:text/html},
}

@software{wiles_pktgen_2022,
	title = {Pktgen - Traffic Generator powered by {DPDK}},
	url = {https://github.com/pktgen/Pktgen-DPDK},
	abstract = {{DPDK} based packet generator},
	author = {Wiles, Keith},
	urldate = {2022-07-01},
	date = {2022-06-10},
	note = {original-date: 2019-10-02T16:11:34Z},
}

@online{noauthor_6_nodate,
	title = {Linux Drivers — Data Plane Development Kit 22.07.0-rc2 documentation},
	url = {https://doc.dpdk.org/guides/linux_gsg/linux_drivers.html},
	urldate = {2022-07-01},
	file = {6. Linux Drivers — Data Plane Development Kit 22.07.0-rc2 documentation:/Users/patrickdifazio/Zotero/storage/JI5QWGJG/linux_drivers.html:text/html},
}

@software{noauthor_p4_2022-1,
	title = {P4 Tutorial},
	rights = {Apache-2.0},
	url = {https://github.com/p4lang/tutorials/blob/9b15344f0b90bd06eeb7b5bc7b4d520cc546a9ee/exercises/basic/README.md},
	abstract = {P4 language tutorials},
	publisher = {p4language},
	urldate = {2022-07-02},
	date = {2022-07-02},
	note = {original-date: 2015-09-30T19:17:28Z},
}

@online{noauthor_qemu_nodate,
	title = {{QEMU}},
	url = {https://www.qemu.org/},
	urldate = {2022-07-02},
}

@online{noauthor_iperf_nodate,
	title = {{iPerf} - Download {iPerf}3 and original {iPerf} pre-compiled binaries},
	url = {https://iperf.fr/iperf-download.php},
	urldate = {2022-07-02},
	file = {iPerf - Download iPerf3 and original iPerf pre-compiled binaries:/Users/patrickdifazio/Zotero/storage/DL37RYZ5/iperf-download.html:text/html},
}

@online{noauthor_cant_nodate,
	title = {Github Issue},
	url = {https://github.com/p4lang/behavioral-model/issues/986},
	urldate = {2022-07-02},
	file = {Can't run Iperf between two containers with BMV2 switch in between · Issue #986 · p4lang/behavioral-model:/Users/patrickdifazio/Zotero/storage/USWRRYKN/986.html:text/html},
}

@online{noauthor_ethtool8_nodate,
	title = {ethtool(8) - Linux man page},
	url = {https://linux.die.net/man/8/ethtool},
	urldate = {2022-07-02},
	file = {ethtool(8) - Linux man page:/Users/patrickdifazio/Zotero/storage/763X6EI8/ethtool.html:text/html},
}

@online{noauthor_wireshark_nodate,
	title = {Wireshark · Go Deep.},
	url = {https://www.wireshark.org/},
	urldate = {2022-07-02},
}

@online{noauthor_universal_nodate,
	title = {Universal {TUN}/{TAP} device driver — The Linux Kernel documentation},
	url = {https://www.kernel.org/doc/html/v5.8/networking/tuntap.html},
	urldate = {2022-07-02},
	file = {Universal TUN/TAP device driver — The Linux Kernel documentation:/Users/patrickdifazio/Zotero/storage/A583HWCX/tuntap.html:text/html},
}

@online{noauthor_using_nodate,
	title = {Using the {MacVTap} driver - {IBM} Documentation},
	url = {https://www.ibm.com/docs/en/linux-on-systems?topic=choices-using-macvtap-driver},
	urldate = {2022-07-02},
	file = {Using the MacVTap driver - IBM Documentation:/Users/patrickdifazio/Zotero/storage/PDDXFCSU/linux-on-systems.html:text/html},
}

@software{noauthor_getting_2022,
	title = {P4PI},
	rights = {Apache-2.0},
	url = {https://github.com/p4lang/p4pi},
	abstract = {P4 on Raspberry Pi for Networking Education},
	publisher = {p4language},
	urldate = {2022-07-03},
	date = {2022-06-29},
	note = {original-date: 2021-06-28T20:39:39Z},
	keywords = {p4, raspberry-pi, wifi},
}

@software{osinski_p4-ovs_2022,
	title = {P4-{OvS} - Bringing the power of P4 to {OvS}!},
	rights = {Apache-2.0},
	url = {https://github.com/osinstom/P4-OvS},
	abstract = {Bringing the power of P4 to {OvS}!},
	author = {Osiński, Tomasz},
	urldate = {2022-07-03},
	date = {2022-06-01},
	note = {original-date: 2020-05-05T17:15:38Z},
	keywords = {bpf, ovs, p4, p4runtime, xdp},
}

@software{noauthor_ubpf_2022,
	title = {{uBPF}},
	rights = {Apache-2.0},
	url = {https://github.com/iovisor/ubpf},
	abstract = {Userspace {eBPF} {VM}},
	publisher = {{IO} Visor Project},
	urldate = {2022-07-03},
	date = {2022-07-01},
	note = {original-date: 2015-09-15T02:48:22Z},
}

@inproceedings{navid_detection_2017,
	title = {Detection and mitigation of Denial of Service ({DoS}) attacks using performance aware Software Defined Networking ({SDN})},
	doi = {10.1109/ICICT.2017.8320164},
	abstract = {Software Defined Networking ({SDN}) stands to transmute our modern networks and data centers, opening them up into highly agile frameworks that can be reconfigured depending on the requirement. Denial of Service ({DoS}) attacks are considered as one of the most destructive attacks. This paper, is about {DoS} attack detection and mitigation using {SDN}. {DoS} attack can minimize the bandwidth utilization, leaving the network unavailable for legitimate traffic. To provide a solution to the problem, concept of performance aware Software Defined Networking is used which involves real time network monitoring using {sFlow} as a visibility protocol. So, {OpenFlow} along with {sFlow} is used as an application to fight {DoS} attacks. Our analysis and results demonstrate that using this technique, {DoS} attacks are successfully defended implying that {SDN} has promising potential to detect and mitigate {DoS} attacks.},
	eventtitle = {2017 International Conference on Information and Communication Technologies ({ICICT})},
	pages = {47--57},
	booktitle = {2017 International Conference on Information and Communication Technologies ({ICICT})},
	author = {Navid, Wajahat and Bhutta, Muhammad Nasir Mumtaz},
	date = {2017-12},
	keywords = {Computer architecture, Control systems, Denial of Service Attack, Hardware, Monitoring, Openflow, Performance Aware Software Defined Networking, Protocols, Security, {sFlow}, {sFlow}-{RT}, Software defined networking, Software Defined Networks},
	file = {IEEE Xplore Abstract Record:/Users/patrickdifazio/Zotero/storage/WGPAHW6R/8320164.html:text/html},
}

@online{noauthor_ipdk-ioovs_nodate,
	title = {ipdk-io/ovs: Open {vSwitch}},
	url = {https://github.com/ipdk-io/ovs},
	urldate = {2022-07-03},
	file = {ipdk-io/ovs\: Open vSwitch:/Users/patrickdifazio/Zotero/storage/UQA8AGRE/ovs.html:text/html},
}

@BOOK{principles,
  TITLE = {Mastering KVM Virtualization},
  SUBTITLE = {},
  AUTHOR = {Prasad Mukhedkar},
  YEAR = {2020}, 
  PUBLISHER = {Packt},
}